// +build !ignore_autogenerated

/*
Copyright (c) 2020 SAP SE or an SAP affiliate company. All rights reserved. This file is licensed under the Apache Software License, v. 2 except as noted otherwise in the LICENSE file

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by conversion-gen. DO NOT EDIT.

package v1alpha1

import (
	unsafe "unsafe"

	openstack "github.com/gardener/machine-controller-manager-provider-openstack/pkg/apis/openstack"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*MachineClassProviderConfig)(nil), (*openstack.MachineClassProviderConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_MachineClassProviderConfig_To_openstack_MachineClassProviderConfig(a.(*MachineClassProviderConfig), b.(*openstack.MachineClassProviderConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*openstack.MachineClassProviderConfig)(nil), (*MachineClassProviderConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_openstack_MachineClassProviderConfig_To_v1alpha1_MachineClassProviderConfig(a.(*openstack.MachineClassProviderConfig), b.(*MachineClassProviderConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*MachineClassSpec)(nil), (*openstack.MachineClassSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_MachineClassSpec_To_openstack_MachineClassSpec(a.(*MachineClassSpec), b.(*openstack.MachineClassSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*openstack.MachineClassSpec)(nil), (*MachineClassSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_openstack_MachineClassSpec_To_v1alpha1_MachineClassSpec(a.(*openstack.MachineClassSpec), b.(*MachineClassSpec), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1alpha1_MachineClassProviderConfig_To_openstack_MachineClassProviderConfig(in *MachineClassProviderConfig, out *openstack.MachineClassProviderConfig, s conversion.Scope) error {
	if err := Convert_v1alpha1_MachineClassSpec_To_openstack_MachineClassSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_MachineClassProviderConfig_To_openstack_MachineClassProviderConfig is an autogenerated conversion function.
func Convert_v1alpha1_MachineClassProviderConfig_To_openstack_MachineClassProviderConfig(in *MachineClassProviderConfig, out *openstack.MachineClassProviderConfig, s conversion.Scope) error {
	return autoConvert_v1alpha1_MachineClassProviderConfig_To_openstack_MachineClassProviderConfig(in, out, s)
}

func autoConvert_openstack_MachineClassProviderConfig_To_v1alpha1_MachineClassProviderConfig(in *openstack.MachineClassProviderConfig, out *MachineClassProviderConfig, s conversion.Scope) error {
	if err := Convert_openstack_MachineClassSpec_To_v1alpha1_MachineClassSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	return nil
}

// Convert_openstack_MachineClassProviderConfig_To_v1alpha1_MachineClassProviderConfig is an autogenerated conversion function.
func Convert_openstack_MachineClassProviderConfig_To_v1alpha1_MachineClassProviderConfig(in *openstack.MachineClassProviderConfig, out *MachineClassProviderConfig, s conversion.Scope) error {
	return autoConvert_openstack_MachineClassProviderConfig_To_v1alpha1_MachineClassProviderConfig(in, out, s)
}

func autoConvert_v1alpha1_MachineClassSpec_To_openstack_MachineClassSpec(in *MachineClassSpec, out *openstack.MachineClassSpec, s conversion.Scope) error {
	out.ImageID = in.ImageID
	out.ImageName = in.ImageName
	out.Region = in.Region
	out.AvailabilityZone = in.AvailabilityZone
	out.FlavorName = in.FlavorName
	out.KeyName = in.KeyName
	out.SecurityGroups = *(*[]string)(unsafe.Pointer(&in.SecurityGroups))
	out.Tags = *(*map[string]string)(unsafe.Pointer(&in.Tags))
	out.NetworkID = in.NetworkID
	out.SubnetID = (*string)(unsafe.Pointer(in.SubnetID))
	out.PodNetworkCidr = in.PodNetworkCidr
	out.RootDiskSize = in.RootDiskSize
	out.UseConfigDrive = (*bool)(unsafe.Pointer(in.UseConfigDrive))
	out.ServerGroupID = (*string)(unsafe.Pointer(in.ServerGroupID))
	return nil
}

// Convert_v1alpha1_MachineClassSpec_To_openstack_MachineClassSpec is an autogenerated conversion function.
func Convert_v1alpha1_MachineClassSpec_To_openstack_MachineClassSpec(in *MachineClassSpec, out *openstack.MachineClassSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_MachineClassSpec_To_openstack_MachineClassSpec(in, out, s)
}

func autoConvert_openstack_MachineClassSpec_To_v1alpha1_MachineClassSpec(in *openstack.MachineClassSpec, out *MachineClassSpec, s conversion.Scope) error {
	out.ImageID = in.ImageID
	out.ImageName = in.ImageName
	out.Region = in.Region
	out.AvailabilityZone = in.AvailabilityZone
	out.FlavorName = in.FlavorName
	out.KeyName = in.KeyName
	out.SecurityGroups = *(*[]string)(unsafe.Pointer(&in.SecurityGroups))
	out.Tags = *(*map[string]string)(unsafe.Pointer(&in.Tags))
	out.NetworkID = in.NetworkID
	out.SubnetID = (*string)(unsafe.Pointer(in.SubnetID))
	out.PodNetworkCidr = in.PodNetworkCidr
	out.RootDiskSize = in.RootDiskSize
	out.UseConfigDrive = (*bool)(unsafe.Pointer(in.UseConfigDrive))
	out.ServerGroupID = (*string)(unsafe.Pointer(in.ServerGroupID))
	return nil
}

// Convert_openstack_MachineClassSpec_To_v1alpha1_MachineClassSpec is an autogenerated conversion function.
func Convert_openstack_MachineClassSpec_To_v1alpha1_MachineClassSpec(in *openstack.MachineClassSpec, out *MachineClassSpec, s conversion.Scope) error {
	return autoConvert_openstack_MachineClassSpec_To_v1alpha1_MachineClassSpec(in, out, s)
}
